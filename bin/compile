#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

logger -p user.notice -t "slugc[$$]" "language_pack_java java_compile_start"

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
. $BIN_DIR/common

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

LOGGER_FLAGS=""

export_env_dir $ENV_DIR

JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz}
mkdir -p /tmp/jvm-common
curl --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

#copy the jdk from cache
if [ -d "$CACHE_DIR/.jdk" ]; then
    cp -r $CACHE_DIR/.jdk $BUILD_DIR/.jdk
fi

# install JDK
javaVersion=$(detect_java_version ${BUILD_DIR})
status_pending "Installing OpenJDK ${javaVersion}"
install_java ${BUILD_DIR} ${javaVersion}
jdk_overlay ${BUILD_DIR}
status_done
echo " done"

cd $BUILD_DIR

#copy the jdk to cache
rm -rf $CACHE_DIR/.jdk
cp -r $BUILD_DIR/.jdk $CACHE_DIR/.jdk

logger -p user.notice -t "slugc[$$]" "language_pack_java java_compile_end $LOGGER_FLAGS"
